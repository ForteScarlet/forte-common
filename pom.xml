<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>love.forte.common</groupId>
    <artifactId>common-parent</artifactId>
    <packaging>pom</packaging>

    <version>1.0.0-ALPHA.5</version><!--cv-->

    <url>https://github.com/ForteScarlet/forte-common</url>
    <scm>
        <url>https://github.com/ForteScarlet/forte-common</url>
        <tag>forte-common</tag>
    </scm>

    <name>forte-common</name>
    <description>forte-common是从simple-robot项目中独立出来的公共模块，
        提供一些公共功能的模块，例如依赖注入模块、日志模块、国际化模块、注解工具等。</description>

    <modules>
        <module>utils</module>
        <module>ioc</module>
        <module>language</module>
        <module>configuration</module>
        <module>log</module>
    </modules>

    <properties>
        <!--<editor-fold desc="encode prop">-->
        <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>utf-8</project.reporting.outputEncoding>
        <!--</editor-fold>-->
        <!--<editor-fold desc="kt prop">-->
        <kotlin.version>1.4.20</kotlin.version>
        <kotlinx.version>1.3.9</kotlinx.version>
        <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <!--</editor-fold>-->

        <!-- slf4j version -->
        <slf4j.version>1.7.30</slf4j.version>

        <!-- dokka version -->
        <dokka.version>1.4.0-rc</dokka.version>

        <junit.jupiter.version>5.5.2</junit.jupiter.version>

        <!-- some version -->
        <fastjson.version>1.2.54</fastjson.version>
        <hutool.version>5.5.1</hutool.version>


    </properties>

    <dependencies>
        <!-- some... -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <!-- dependencyManagement -->
    <dependencyManagement>
        <dependencies>
            <!-- common-utils -->
            <dependency>
                <groupId>love.forte.common</groupId>
                <artifactId>utils</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- common-log -->
            <dependency>
                <groupId>love.forte.common</groupId>
                <artifactId>log</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- common-language -->
            <dependency>
                <groupId>love.forte.common</groupId>
                <artifactId>language</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- common-configuration -->
            <dependency>
                <groupId>love.forte.common</groupId>
                <artifactId>configuration</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- common-ioc -->
            <dependency>
                <groupId>love.forte.common</groupId>
                <artifactId>ioc</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--</editor-fold>-->
            <!--<editor-fold desc="kotlin dependencies">-->
            <!-- kt -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <!-- ktx -->
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-core</artifactId>
                <version>${kotlinx.version}</version>
            </dependency>

            <!-- kt test -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>
            <!--</editor-fold>-->
            <!--<editor-fold desc="fastjson dependency">-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!--</editor-fold>-->
            <!--<editor-fold desc="hutool dependencies">-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-aop</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bloomFilter</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-cache</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-core</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-cron</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-crypto</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-db</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-dfa</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-extra</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-http</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-log</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-script</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-setting</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-system</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-json</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-captcha</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-poi</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-socket</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!--</editor-fold>-->
            <!--<editor-fold desc="slf4j dependency">-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!--</editor-fold>-->



        </dependencies>
    </dependencyManagement>

    <!-- build plugins -->
    <build>
        <plugins>
            <!-- compiler plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <!-- java源码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
            </plugin>

            <!-- (1) deploy插件 -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
            <!-- （2）sonatype的staging插件 -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
            </plugin>
            <!-- （3）SCM插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
            </plugin>
            <!-- （4）release插件，下面checkModificationExcludes是排除一些目录文件不要发布。 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>
            <!-- GPG -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
            </plugin>


        </plugins>


        <pluginManagement>
            <plugins>
                <!-- compiler plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <executions>
                        <!-- 替换会被 maven 特别处理的 default-compile -->
                        <execution>
                            <id>default-compile</id>
                            <phase>none</phase>
                        </execution>
                        <!-- 替换会被 maven 特别处理的 default-testCompile -->
                        <execution>
                            <id>default-testCompile</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>java-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>java-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <compilerArgs>
                            <arg>-parameters</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <!-- java源码 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <attach>true</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>compile</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- kt-maven-plugin -->
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- kotlinOptions.freeCompilerArgs = ['-Xjvm-default=enable'] -->
                        <args>
                            <!--<arg>-Xjvm-default=enable</arg>-->
                            <arg>-Xjvm-default=all</arg>
                            <arg>-Xinline-classes</arg>
                            <arg>-Xopt-in=kotlin.RequiresOptIn</arg>
                        </args>
                        <jvmTarget>1.8</jvmTarget>
                        <javaParameters>true</javaParameters>
                    </configuration>
                </plugin>

                <!-- dokka -->
                <plugin>
                    <groupId>org.jetbrains.dokka</groupId>
                    <artifactId>dokka-maven-plugin</artifactId>
                    <version>${dokka.version}</version>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <!--<goal>dokka</goal>-->
                                <!--<goal>javadoc</goal>-->
                                <goal>javadocJar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>

                        <!--<skip>true</skip>-->

                        <includes>
                            <include>modules.md</include>
                        </includes>
                        <!-- Set to true to skip dokka task, default: false -->
                        <!--                        <skip>true</skip>-->
                        <!-- Used for linking to JDK, default: 6 -->
                        <jdkVersion>8</jdkVersion>
                        <!-- Do not create index pages for empty packages -->
                        <skipEmptyPackages>true</skipEmptyPackages>
                        <!-- Emit warnings about not documented members, applies globally, also can be overridden by packageOptions -->
                        <reportUndocumented>true</reportUndocumented>

                        <!--<noJdkLink>true</noJdkLink>-->
                        <!--<noStdlibLink>true</noStdlibLink>-->

                        <!--<outputDir>../simple-robot-2.0-doc/docs/${project.name}/doc</outputDir>-->

                        <dokkaPlugins>
                            <!--<plugin>-->
                            <!--    <groupId>org.jetbrains.dokka</groupId>-->
                            <!--    <artifactId>dokka-base</artifactId>-->
                            <!--    <version>${dokka.version}</version>-->
                            <!--</plugin>-->
                            <!--<plugin>-->
                            <!--    <groupId>org.jetbrains.dokka</groupId>-->
                            <!--    <artifactId>gfm-plugin</artifactId>-->
                            <!--    <version>${dokka.version}</version>-->
                            <!--</plugin>-->
                            <!--<plugin>-->
                            <!--    <groupId>org.jetbrains.dokka</groupId>-->
                            <!--    <artifactId>jekyll-plugin</artifactId>-->
                            <!--    <version>${dokka.version}</version>-->
                            <!--</plugin>-->
                            <!--<plugin>-->
                            <!--    <groupId>org.jetbrains.dokka</groupId>-->
                            <!--    <artifactId>javadoc-plugin</artifactId>-->
                            <!--    <version>${dokka.version}</version>-->
                            <!--</plugin>-->
                            <!--<plugin>-->
                            <!--    <groupId>org.jetbrains.dokka</groupId>-->
                            <!--    <artifactId>kotlin-as-java-plugin</artifactId>-->
                            <!--    <version>${dokka.version}</version>-->
                            <!--</plugin>-->
                        </dokkaPlugins>
                    </configuration>
                </plugin>


                <!-- maven仓库相关插件 -->
                <!-- (1) deploy插件 -->
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                    <executions>
                        <execution>
                            <id>default-deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- （2）sonatype的staging插件 -->
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.7</version>
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>oss</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    </configuration>
                </plugin>
                <!-- （3）SCM插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.8.1</version>
                </plugin>
                <!-- （4）release插件，下面checkModificationExcludes是排除一些目录文件不要发布。 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <mavenExecutorId>forked-path</mavenExecutorId>
                        <useReleaseProfile>false</useReleaseProfile>
                        <arguments>-Psonatype-oss-release</arguments>
                        <pushChanges>false</pushChanges>
                        <localCheckout>false</localCheckout>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <checkModificationExcludes>
                            <checkModificationExclude>.idea/</checkModificationExclude>
                            <checkModificationExclude>.idea/*</checkModificationExclude>
                            <checkModificationExclude>test/</checkModificationExclude>
                            <checkModificationExclude>test/*</checkModificationExclude>
                            <checkModificationExclude>.idea/libraries/*</checkModificationExclude>
                            <checkModificationExclude>pom.xml</checkModificationExclude>
                            <checkModificationExclude>release-pom.xml</checkModificationExclude>

                            <checkModificationExclude>jdonframework.iml</checkModificationExclude>
                            <checkModificationExclude>JdonAccessory/jdon-hibernate3x/jdon-hibernate3x.iml
                            </checkModificationExclude>
                            <checkModificationExclude>JdonAccessory/jdon-jdbc/jdon-jdbc.iml</checkModificationExclude>
                            <checkModificationExclude>JdonAccessory/jdon-remote/jdon-remote.iml</checkModificationExclude>
                            <checkModificationExclude>JdonAccessory/jdon-struts1x/jdon-struts1x.iml
                            </checkModificationExclude>
                        </checkModificationExcludes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-scm-plugin</artifactId>
                            <version>1.8.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- GPG
                第3步：进行GPG签名加密，
                这是对生成的jar包，javadoc包等进行签名加密，
                保证你的文件上传到服务器过程中不会被拦截和破解安全，服务器那边使用你提供的密钥对进行解密。
                在pom.xml的build一级目录下的plugins里面加入下面：
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.5</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>install</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- licenses -->
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <!-- developers -->
    <developers>
        <developer>
            <roles>
                <role>Project manager</role>
                <role>Architect</role>
                <role>Developer</role>
                <role>Cleaner</role>
                <role>Mascot</role>
            </roles>
            <name>ForteScarlet</name>
            <email>ForteScarlet@163.com</email>
        </developer>
    </developers>

    <distributionManagement>
        <snapshotRepository>
            <id>oss</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>oss</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.7</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>oss</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>